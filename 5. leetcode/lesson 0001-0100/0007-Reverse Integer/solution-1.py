# -*- coding: utf-8 -*-

# Author: Cynthia

"""
    题目分析: 123变321, -123变-321, 要求取值范围[-2^31, 2^31-1], 超限返回0
    注意计算机存储的是补码, 正数补码同原码, 负数是符号位不变, 其余取反再加1
    这里讲一下记忆补码取值范围的方法, 首先, 为什么不用原码存储, 因为原码浪费
    00000...和10000...都表示0, 补码不浪费, 不同的补码一定表示不同的值
    以8位为例, 总共2^8种枚举, 从00000000到11111111, 这里面正数00000000到
    01111111, 即0-2^7-1, 一共2^7个, 可以推测, 负数是2^8-2^7个, 即2^7, 而
    补码里又没有-0, 所以肯定是-1到-2^7
"""
"""
    方法1, 利用字符串以及python的不超限特性
"""


class Solution:

    def reverse(self, x: int) -> int:
        s = str(x) if x >= 0 else str(x)[1:]
        x2 = int(s[::-1]) if x >= 0 else -int(s[::-1])
        return x2 if -2**31 <= x2 <= 2**31-1 else 0


s = Solution()
print(s.reverse(-12))